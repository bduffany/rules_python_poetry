package gazelle

import (
	"github.com/bazelbuild/bazel-gazelle/rule"
)

var pythonKinds = map[string]rule.KindInfo{
	pythonBinRule: {
		MatchAny:      true,
		NonEmptyAttrs: map[string]bool{"srcs": true},
		MergeableAttrs: map[string]bool{
			"srcs": true,
			"main": true,
		},
		ResolveAttrs: map[string]bool{"deps": true},
	},
	pythonLibRule: {
		MatchAttrs:    []string{"srcs"},
		NonEmptyAttrs: map[string]bool{"srcs": true},
		MergeableAttrs: map[string]bool{
			"srcs": true,
		},
		ResolveAttrs: map[string]bool{"deps": true},
	},
	pythonTestRule: {
		MatchAttrs:    []string{"srcs"},
		NonEmptyAttrs: map[string]bool{"srcs": true},
		MergeableAttrs: map[string]bool{
			"srcs": true,
		},
		ResolveAttrs: map[string]bool{"deps": true},
	},
	pythonPytestRule: {
		MatchAttrs:    []string{"srcs"},
		NonEmptyAttrs: map[string]bool{"srcs": true},
		MergeableAttrs: map[string]bool{
			"srcs": true,
		},
		ResolveAttrs: map[string]bool{"deps": true},
	},
	pipRepositoryRule: {
		MatchAttrs: []string{"package"},
		NonEmptyAttrs: map[string]bool{
			"package": true,
		},
		MergeableAttrs: map[string]bool{
			"requirement": true,
		},
	},
}

// the rule to load in generated BUILD.bazel files (to run say a formatter on shell files as well
// you could load a separate format rule)
var pythonLoads = []rule.LoadInfo{
	{
		Name: "@rules_python//python:defs.bzl",
		Symbols: []string{
			pythonBinRule,
			pythonLibRule,
			pythonTestRule,
		},
	},
	{
		Name: "@rules_python_poetry//:defs.bzl",
		Symbols: []string{
			pipRepositoryRule,
			pythonPytestRule,
		},
	},
}

// Name returns the name of the language. This should be a prefix of the
// kinds of rules generated by the language, e.g., "go" for the Go extension
// since it generates "go_library" rules.
func (pythonLang) Name() string { return pythonLangName }

// Kinds returns a map of maps rule names (kinds) and information on how to
// match and merge attributes that may be found in rules of those kinds. All
// kinds of rules generated for this language may be found here.
func (pythonLang) Kinds() map[string]rule.KindInfo { return pythonKinds }

// Loads returns .bzl files and symbols they define. Every rule generated by
// GenerateRules, now or in the past, should be loadable from one of these
// files.
func (pythonLang) Loads() []rule.LoadInfo { return pythonLoads }
